{"version":3,"sources":["webpack:///./node_modules/ng-drag-drop/index.js","webpack:///./node_modules/ng-drag-drop/src/directives/draggable.directive.js","webpack:///./node_modules/ng-drag-drop/src/directives/droppable.directive.js","webpack:///./node_modules/ng-drag-drop/src/ng-drag-drop.module.js","webpack:///./node_modules/ng-drag-drop/src/services/ng-drag-drop.service.js","webpack:///./node_modules/ng-drag-drop/src/shared/dom-helper.js","webpack:///./node_modules/ng-drag-drop/src/shared/drop-event.model.js","webpack:///./src/app/board/allboards.component.ts","webpack:///./src/app/board/allboards.html","webpack:///./src/app/board/board.component.ts","webpack:///./src/app/board/board.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.html","webpack:///./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,iDAAiD;AAC1D,SAAS;AACT,MAAM;AACN;AACA,oBAAoB,qBAAqB;AACzC,sBAAsB,qBAAqB;AAC3C,sBAAsB,qBAAqB;AAC3C,qBAAqB,qBAAqB;AAC1C,2BAA2B,qBAAqB;AAChD,qBAAqB,qBAAqB;AAC1C,4BAA4B,qBAAqB;AACjD,qBAAqB,qBAAqB;AAC1C,uBAAuB,iDAAiD,GAAG,qBAAqB;AAChG,uBAAuB,sBAAsB;AAC7C,kBAAkB,sBAAsB;AACxC,qBAAqB,sBAAsB;AAC3C,qBAAqB,8DAA8D;AACnF,mBAAmB,4DAA4D;AAC/E,qBAAqB,8DAA8D,GAAG,+DAA+D;AACrJ;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;ACrMA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uEAAuE,oCAAoC,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,iDAAiD;AAC1D,SAAS;AACT,MAAM;AACN;AACA,uBAAuB,sBAAsB;AAC7C,sBAAsB,sBAAsB;AAC5C,uBAAuB,sBAAsB;AAC7C,kBAAkB,sBAAsB;AACxC,yBAAyB,qBAAqB;AAC9C,yBAAyB,qBAAqB;AAC9C,qBAAqB,qBAAqB;AAC1C,uBAAuB,qBAAqB;AAC5C,gBAAgB,yDAAyD;AACzE;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;ACpOA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;AACD;AACA,gD;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"dashboard-dashboard-module.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ng_drag_drop_module_1 = require(\"./src/ng-drag-drop.module\");\r\nexports.NgDragDropModule = ng_drag_drop_module_1.NgDragDropModule;\r\nvar drop_event_model_1 = require(\"./src/shared/drop-event.model\");\r\nexports.DropEvent = drop_event_model_1.DropEvent;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_drag_drop_service_1 = require(\"../services/ng-drag-drop.service\");\r\nvar dom_helper_1 = require(\"../shared/dom-helper\");\r\nvar Draggable = /** @class */ (function () {\r\n    function Draggable(el, renderer, ng2DragDropService, zone) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.ng2DragDropService = ng2DragDropService;\r\n        this.zone = zone;\r\n        /**\r\n         * Currently not used\r\n         */\r\n        this.dragEffect = 'move';\r\n        /**\r\n         * Defines compatible drag drop pairs. Values must match both in draggable and droppable.dropScope.\r\n         */\r\n        this.dragScope = 'default';\r\n        /**\r\n         * The CSS class applied to a draggable element. If a dragHandle is defined then its applied to that handle\r\n         * element only. By default it is used to change the mouse over pointer.\r\n         */\r\n        this.dragHandleClass = 'drag-handle';\r\n        /**\r\n         * CSS class applied on the source draggable element while being dragged.\r\n         */\r\n        this.dragClass = 'drag-border';\r\n        /**\r\n         * CSS class applied on the drag ghost when being dragged.\r\n         */\r\n        this.dragTransitClass = 'drag-transit';\r\n        /**\r\n         * Event fired when Drag is started\r\n         */\r\n        this.onDragStart = new core_1.EventEmitter();\r\n        /**\r\n         * Event fired while the element is being dragged\r\n         */\r\n        this.onDrag = new core_1.EventEmitter();\r\n        /**\r\n         * Event fired when drag ends\r\n         */\r\n        this.onDragEnd = new core_1.EventEmitter();\r\n        /**\r\n         * @private\r\n         * Backing field for the dragEnabled property\r\n         */\r\n        this._dragEnabled = true;\r\n    }\r\n    Object.defineProperty(Draggable.prototype, \"dragImage\", {\r\n        get: function () {\r\n            return this._dragImage;\r\n        },\r\n        /**\r\n         * The url to image that will be used as custom drag image when the draggable is being dragged.\r\n         */\r\n        set: function (value) {\r\n            this._dragImage = value;\r\n            this.dragImageElement = new Image();\r\n            this.dragImageElement.src = this.dragImage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Draggable.prototype, \"dragEnabled\", {\r\n        get: function () {\r\n            return this._dragEnabled;\r\n        },\r\n        /**\r\n         * Defines if drag is enabled. `true` by default.\r\n         */\r\n        set: function (value) {\r\n            this._dragEnabled = value;\r\n            this.applyDragHandleClass();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Draggable.prototype.ngOnInit = function () {\r\n        this.applyDragHandleClass();\r\n    };\r\n    Draggable.prototype.ngOnDestroy = function () {\r\n        this.unbindDragListeners();\r\n    };\r\n    Draggable.prototype.dragStart = function (e) {\r\n        var _this = this;\r\n        if (this.allowDrag()) {\r\n            // This is a kludgy approach to apply CSS to the drag helper element when an image is being dragged.\r\n            dom_helper_1.DomHelper.addClass(this.el, this.dragTransitClass);\r\n            setTimeout(function () {\r\n                dom_helper_1.DomHelper.addClass(_this.el, _this.dragClass);\r\n                dom_helper_1.DomHelper.removeClass(_this.el, _this.dragTransitClass);\r\n            }, 10);\r\n            this.ng2DragDropService.dragData = this.dragData;\r\n            this.ng2DragDropService.scope = this.dragScope;\r\n            // Firefox requires setData() to be called otherwise the drag does not work.\r\n            // We don't use setData() to transfer data anymore so this is just a dummy call.\r\n            if (e.dataTransfer != null) {\r\n                e.dataTransfer.setData('text', '');\r\n            }\r\n            // Set dragImage\r\n            if (this.dragImage) {\r\n                e.dataTransfer.setDragImage(this.dragImageElement, 0, 0);\r\n            }\r\n            e.stopPropagation();\r\n            this.onDragStart.emit(e);\r\n            this.ng2DragDropService.onDragStart.next();\r\n            this.zone.runOutsideAngular(function () {\r\n                _this.unbindDragListener = _this.renderer.listen(_this.el.nativeElement, 'drag', function (dragEvent) {\r\n                    _this.drag(dragEvent);\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    Draggable.prototype.drag = function (e) {\r\n        this.onDrag.emit(e);\r\n    };\r\n    Draggable.prototype.dragEnd = function (e) {\r\n        this.unbindDragListeners();\r\n        dom_helper_1.DomHelper.removeClass(this.el, this.dragClass);\r\n        this.ng2DragDropService.onDragEnd.next();\r\n        this.onDragEnd.emit(e);\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n    Draggable.prototype.mousedown = function (e) {\r\n        this.mouseDownElement = e.target;\r\n    };\r\n    Draggable.prototype.allowDrag = function () {\r\n        if (this.dragHandle) {\r\n            return dom_helper_1.DomHelper.matches(this.mouseDownElement, this.dragHandle) && this.dragEnabled;\r\n        }\r\n        else {\r\n            return this.dragEnabled;\r\n        }\r\n    };\r\n    Draggable.prototype.applyDragHandleClass = function () {\r\n        var dragElement = this.getDragHandleElement();\r\n        if (!dragElement) {\r\n            return;\r\n        }\r\n        if (this.dragEnabled) {\r\n            dom_helper_1.DomHelper.addClass(dragElement, this.dragHandleClass);\r\n        }\r\n        else {\r\n            dom_helper_1.DomHelper.removeClass(this.el, this.dragHandleClass);\r\n        }\r\n    };\r\n    Draggable.prototype.getDragHandleElement = function () {\r\n        var dragElement = this.el;\r\n        if (this.dragHandle) {\r\n            dragElement = this.el.nativeElement.querySelector(this.dragHandle);\r\n        }\r\n        return dragElement;\r\n    };\r\n    Draggable.prototype.unbindDragListeners = function () {\r\n        if (this.unbindDragListener) {\r\n            this.unbindDragListener();\r\n        }\r\n    };\r\n    Draggable.decorators = [\r\n        { type: core_1.Directive, args: [{\r\n                    selector: '[draggable]'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Draggable.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef },\r\n        { type: core_1.Renderer2 },\r\n        { type: ng_drag_drop_service_1.NgDragDropService },\r\n        { type: core_1.NgZone }\r\n    ]; };\r\n    Draggable.propDecorators = {\r\n        dragData: [{ type: core_1.Input }],\r\n        dragHandle: [{ type: core_1.Input }],\r\n        dragEffect: [{ type: core_1.Input }],\r\n        dragScope: [{ type: core_1.Input }],\r\n        dragHandleClass: [{ type: core_1.Input }],\r\n        dragClass: [{ type: core_1.Input }],\r\n        dragTransitClass: [{ type: core_1.Input }],\r\n        dragImage: [{ type: core_1.Input }],\r\n        dragEnabled: [{ type: core_1.HostBinding, args: ['draggable',] }, { type: core_1.Input }],\r\n        onDragStart: [{ type: core_1.Output }],\r\n        onDrag: [{ type: core_1.Output }],\r\n        onDragEnd: [{ type: core_1.Output }],\r\n        dragStart: [{ type: core_1.HostListener, args: ['dragstart', ['$event'],] }],\r\n        dragEnd: [{ type: core_1.HostListener, args: ['dragend', ['$event'],] }],\r\n        mousedown: [{ type: core_1.HostListener, args: ['mousedown', ['$event'],] }, { type: core_1.HostListener, args: ['touchstart', ['$event'],] }]\r\n    };\r\n    return Draggable;\r\n}());\r\nexports.Draggable = Draggable;\r\n//# sourceMappingURL=draggable.directive.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar drop_event_model_1 = require(\"../shared/drop-event.model\");\r\nvar ng_drag_drop_service_1 = require(\"../services/ng-drag-drop.service\");\r\nvar dom_helper_1 = require(\"../shared/dom-helper\");\r\nvar Droppable = /** @class */ (function () {\r\n    function Droppable(el, renderer, ng2DragDropService, zone) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.ng2DragDropService = ng2DragDropService;\r\n        this.zone = zone;\r\n        /**\r\n         *  Event fired when Drag dragged element enters a valid drop target.\r\n         */\r\n        this.onDragEnter = new core_1.EventEmitter();\r\n        /**\r\n         * Event fired when an element is being dragged over a valid drop target\r\n         */\r\n        this.onDragOver = new core_1.EventEmitter();\r\n        /**\r\n         * Event fired when a dragged element leaves a valid drop target.\r\n         */\r\n        this.onDragLeave = new core_1.EventEmitter();\r\n        /**\r\n         * Event fired when an element is dropped on a valid drop target.\r\n         */\r\n        this.onDrop = new core_1.EventEmitter();\r\n        /**\r\n         * CSS class that is applied when a compatible draggable is being dragged over this droppable.\r\n         */\r\n        this.dragOverClass = 'drag-over-border';\r\n        /**\r\n         * CSS class applied on this droppable when a compatible draggable item is being dragged.\r\n         * This can be used to visually show allowed drop zones.\r\n         */\r\n        this.dragHintClass = 'drag-hint-border';\r\n        /**\r\n         * Defines compatible drag drop pairs. Values must match both in draggable and droppable.dropScope.\r\n         */\r\n        this.dropScope = 'default';\r\n        /**\r\n         * @private\r\n         * Backing field for the dropEnabled property\r\n         */\r\n        this._dropEnabled = true;\r\n        /**\r\n         * @private\r\n         * Field for tracking drag state. Helps when\r\n         * drag stop event occurs before the allowDrop()\r\n         * can be calculated (async).\r\n         */\r\n        this._isDragActive = false;\r\n        /**\r\n         * @private\r\n         * Field for tracking if service is subscribed.\r\n         * Avoids creating multiple subscriptions of service.\r\n         */\r\n        this._isServiceActive = false;\r\n    }\r\n    Object.defineProperty(Droppable.prototype, \"dropEnabled\", {\r\n        get: function () {\r\n            return this._dropEnabled;\r\n        },\r\n        /**\r\n         * Defines if drop is enabled. `true` by default.\r\n         */\r\n        set: function (value) {\r\n            this._dropEnabled = value;\r\n            if (this._dropEnabled === true) {\r\n                this.subscribeService();\r\n            }\r\n            else {\r\n                this.unsubscribeService();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Droppable.prototype.ngOnInit = function () {\r\n        if (this.dropEnabled === true) {\r\n            this.subscribeService();\r\n        }\r\n    };\r\n    Droppable.prototype.ngOnDestroy = function () {\r\n        this.unsubscribeService();\r\n        this.unbindDragListeners();\r\n    };\r\n    Droppable.prototype.dragEnter = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.onDragEnter.emit(e);\r\n    };\r\n    Droppable.prototype.dragOver = function (e, result) {\r\n        if (result) {\r\n            dom_helper_1.DomHelper.addClass(this.el, this.dragOverClass);\r\n            e.preventDefault();\r\n            this.onDragOver.emit(e);\r\n        }\r\n    };\r\n    Droppable.prototype.dragLeave = function (e) {\r\n        dom_helper_1.DomHelper.removeClass(this.el, this.dragOverClass);\r\n        e.preventDefault();\r\n        this.onDragLeave.emit(e);\r\n    };\r\n    Droppable.prototype.drop = function (e) {\r\n        var _this = this;\r\n        this.allowDrop().subscribe(function (result) {\r\n            if (result && _this._isDragActive) {\r\n                dom_helper_1.DomHelper.removeClass(_this.el, _this.dragOverClass);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                _this.ng2DragDropService.onDragEnd.next();\r\n                _this.onDrop.emit(new drop_event_model_1.DropEvent(e, _this.ng2DragDropService.dragData));\r\n                _this.ng2DragDropService.dragData = null;\r\n                _this.ng2DragDropService.scope = null;\r\n            }\r\n        });\r\n    };\r\n    Droppable.prototype.allowDrop = function () {\r\n        var _this = this;\r\n        var allowed = false;\r\n        /* tslint:disable:curly */\r\n        /* tslint:disable:one-line */\r\n        if (typeof this.dropScope === 'string') {\r\n            if (typeof this.ng2DragDropService.scope === 'string')\r\n                allowed = this.ng2DragDropService.scope === this.dropScope;\r\n            else if (this.ng2DragDropService.scope instanceof Array)\r\n                allowed = this.ng2DragDropService.scope.indexOf(this.dropScope) > -1;\r\n        }\r\n        else if (this.dropScope instanceof Array) {\r\n            if (typeof this.ng2DragDropService.scope === 'string')\r\n                allowed = this.dropScope.indexOf(this.ng2DragDropService.scope) > -1;\r\n            else if (this.ng2DragDropService.scope instanceof Array)\r\n                allowed = this.dropScope.filter(function (item) {\r\n                    return _this.ng2DragDropService.scope.indexOf(item) !== -1;\r\n                }).length > 0;\r\n        }\r\n        else if (typeof this.dropScope === 'function') {\r\n            allowed = this.dropScope(this.ng2DragDropService.dragData);\r\n            if (allowed instanceof rxjs_1.Observable) {\r\n                return allowed.pipe(operators_1.map(function (result) { return result && _this.dropEnabled; }));\r\n            }\r\n        }\r\n        /* tslint:enable:curly */\r\n        /* tslint:disable:one-line */\r\n        return rxjs_1.of(allowed && this.dropEnabled);\r\n    };\r\n    Droppable.prototype.subscribeService = function () {\r\n        var _this = this;\r\n        if (this._isServiceActive === true) {\r\n            return;\r\n        }\r\n        this._isServiceActive = true;\r\n        this.dragStartSubscription = this.ng2DragDropService.onDragStart.subscribe(function () {\r\n            _this._isDragActive = true;\r\n            _this.allowDrop().subscribe(function (result) {\r\n                if (result && _this._isDragActive) {\r\n                    dom_helper_1.DomHelper.addClass(_this.el, _this.dragHintClass);\r\n                    _this.zone.runOutsideAngular(function () {\r\n                        _this.unbindDragEnterListener = _this.renderer.listen(_this.el.nativeElement, 'dragenter', function (dragEvent) {\r\n                            _this.dragEnter(dragEvent);\r\n                        });\r\n                        _this.unbindDragOverListener = _this.renderer.listen(_this.el.nativeElement, 'dragover', function (dragEvent) {\r\n                            _this.dragOver(dragEvent, result);\r\n                        });\r\n                        _this.unbindDragLeaveListener = _this.renderer.listen(_this.el.nativeElement, 'dragleave', function (dragEvent) {\r\n                            _this.dragLeave(dragEvent);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        this.dragEndSubscription = this.ng2DragDropService.onDragEnd.subscribe(function () {\r\n            _this._isDragActive = false;\r\n            dom_helper_1.DomHelper.removeClass(_this.el, _this.dragHintClass);\r\n            _this.unbindDragListeners();\r\n        });\r\n    };\r\n    Droppable.prototype.unsubscribeService = function () {\r\n        this._isServiceActive = false;\r\n        if (this.dragStartSubscription) {\r\n            this.dragStartSubscription.unsubscribe();\r\n        }\r\n        if (this.dragEndSubscription) {\r\n            this.dragEndSubscription.unsubscribe();\r\n        }\r\n    };\r\n    Droppable.prototype.unbindDragListeners = function () {\r\n        if (this.unbindDragEnterListener) {\r\n            this.unbindDragEnterListener();\r\n        }\r\n        if (this.unbindDragOverListener) {\r\n            this.unbindDragOverListener();\r\n        }\r\n        if (this.unbindDragLeaveListener) {\r\n            this.unbindDragLeaveListener();\r\n        }\r\n    };\r\n    Droppable.decorators = [\r\n        { type: core_1.Directive, args: [{\r\n                    selector: '[droppable]'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Droppable.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef },\r\n        { type: core_1.Renderer2 },\r\n        { type: ng_drag_drop_service_1.NgDragDropService },\r\n        { type: core_1.NgZone }\r\n    ]; };\r\n    Droppable.propDecorators = {\r\n        onDragEnter: [{ type: core_1.Output }],\r\n        onDragOver: [{ type: core_1.Output }],\r\n        onDragLeave: [{ type: core_1.Output }],\r\n        onDrop: [{ type: core_1.Output }],\r\n        dragOverClass: [{ type: core_1.Input }],\r\n        dragHintClass: [{ type: core_1.Input }],\r\n        dropScope: [{ type: core_1.Input }],\r\n        dropEnabled: [{ type: core_1.Input }],\r\n        drop: [{ type: core_1.HostListener, args: ['drop', ['$event'],] }]\r\n    };\r\n    return Droppable;\r\n}());\r\nexports.Droppable = Droppable;\r\n//# sourceMappingURL=droppable.directive.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar draggable_directive_1 = require(\"./directives/draggable.directive\");\r\nvar droppable_directive_1 = require(\"./directives/droppable.directive\");\r\nvar ng_drag_drop_service_1 = require(\"./services/ng-drag-drop.service\");\r\nvar NgDragDropModule = /** @class */ (function () {\r\n    function NgDragDropModule() {\r\n    }\r\n    NgDragDropModule.forRoot = function () {\r\n        return {\r\n            ngModule: NgDragDropModule,\r\n            providers: [ng_drag_drop_service_1.NgDragDropService]\r\n        };\r\n    };\r\n    NgDragDropModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [\r\n                        draggable_directive_1.Draggable,\r\n                        droppable_directive_1.Droppable\r\n                    ],\r\n                    exports: [\r\n                        draggable_directive_1.Draggable,\r\n                        droppable_directive_1.Droppable\r\n                    ]\r\n                },] },\r\n    ];\r\n    return NgDragDropModule;\r\n}());\r\nexports.NgDragDropModule = NgDragDropModule;\r\n//# sourceMappingURL=ng-drag-drop.module.js.map","\"use strict\";\r\n/**\r\n * Created by orehman on 2/22/2017.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar NgDragDropService = /** @class */ (function () {\r\n    function NgDragDropService() {\r\n        this.onDragStart = new rxjs_1.Subject();\r\n        this.onDragEnd = new rxjs_1.Subject();\r\n    }\r\n    NgDragDropService.decorators = [\r\n        { type: core_1.Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    NgDragDropService.ctorParameters = function () { return []; };\r\n    return NgDragDropService;\r\n}());\r\nexports.NgDragDropService = NgDragDropService;\r\n//# sourceMappingURL=ng-drag-drop.service.js.map","\"use strict\";\r\n/**\r\n * Created by orehman on 2/22/2017.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar DomHelper = /** @class */ (function () {\r\n    function DomHelper() {\r\n    }\r\n    /**\r\n     * Polyfill for element.matches()\r\n     * See: https://developer.mozilla.org/en/docs/Web/API/Element/matches#Polyfill\r\n     * @param element\r\n     * @param selectorName\r\n     */\r\n    DomHelper.matches = function (element, selectorName) {\r\n        var proto = Element.prototype;\r\n        var func = proto['matches'] ||\r\n            proto.matchesSelector ||\r\n            proto.mozMatchesSelector ||\r\n            proto.msMatchesSelector ||\r\n            proto.oMatchesSelector ||\r\n            proto.webkitMatchesSelector ||\r\n            function (s) {\r\n                var matches = (this.document || this.ownerDocument).querySelectorAll(s), i = matches.length;\r\n                while (--i >= 0 && matches.item(i) !== this) {\r\n                }\r\n                return i > -1;\r\n            };\r\n        return func.call(element, selectorName);\r\n    };\r\n    /**\r\n     * Applies the specified css class on nativeElement\r\n     * @param elementRef\r\n     * @param className\r\n     */\r\n    DomHelper.addClass = function (elementRef, className) {\r\n        var e = this.getElementWithValidClassList(elementRef);\r\n        if (e) {\r\n            e.classList.add(className);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the specified class from nativeElement\r\n     * @param elementRef\r\n     * @param className\r\n     */\r\n    DomHelper.removeClass = function (elementRef, className) {\r\n        var e = this.getElementWithValidClassList(elementRef);\r\n        if (e) {\r\n            e.classList.remove(className);\r\n        }\r\n    };\r\n    /**\r\n     * Gets element with valid classList\r\n     *\r\n     * @param elementRef\r\n     * @returns ElementRef | null\r\n     */\r\n    DomHelper.getElementWithValidClassList = function (elementRef) {\r\n        var e = elementRef instanceof core_1.ElementRef ? elementRef.nativeElement : elementRef;\r\n        if (e.classList !== undefined && e.classList !== null) {\r\n            return e;\r\n        }\r\n        return null;\r\n    };\r\n    return DomHelper;\r\n}());\r\nexports.DomHelper = DomHelper;\r\n//# sourceMappingURL=dom-helper.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DropEvent = /** @class */ (function () {\r\n    function DropEvent(event, data) {\r\n        this.nativeEvent = event;\r\n        this.dragData = data;\r\n    }\r\n    return DropEvent;\r\n}());\r\nexports.DropEvent = DropEvent;\r\n//# sourceMappingURL=drop-event.model.js.map","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-allboard',\n  templateUrl:'allboards.html' \n})\nexport class AllBoardsComponent {\n    data;\n    checklen=true;\n    constructor(private router:Router,private http:HttpClient){\n        this.http.get('/user/getboards/'+localStorage.getItem('userid')).subscribe((res:any)=>{\n            if(res.success){\n                this.data=res.boards;\n                if(this.data.length==0){\n                    this.checklen=false\n                }\n            }\n        })\n    }\n    viewblog(bid){\n        this.router.navigate(['/dashboard','user',bid])\n    }\n\n}\n\n","module.exports = \"<style>\\n.pointer{\\n    cursor:pointer;\\n}\\n</style>\\n\\n<br><br><br><div *ngIf=\\\"checklen ;else nodata\\\">\\n    <h3 style=\\\"color:white;\\\"> Your Personal Boards</h3>\\n    <br>\\n    <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let el of data\\\" (click)=\\\"viewblog(el._id)\\\" class=\\\"col-lg-3 col-md-4 col-sm-6 col-xs-12\\\">\\n          <div class=\\\"card pointer\\\" style=\\\"width: 15rem;\\\">\\n            <h3 class=\\\"card-header bg-primary\\\" style=\\\"color: white\\\">{{el.name}}</h3>\\n            <div class=\\\"card-body\\\">\\n            <b>Click Here to see Board</b>\\n            </div>\\n          </div>\\n          <br>\\n      </div>\\n    </div>\\n    </div>\\n    <ng-template #nodata><p style=\\\"color:white\\\"> You Have No Boards..!! </p></ng-template>\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-board',\n    templateUrl: './board.html',\n    styleUrls: []\n})\nexport class BoardComponent {\n    data;\n    checkswim = true;\n    checkcard = true;\n    public targetItem: any = null;\n    a; b;\n\n\n\n    ngOnInit() {\n        this.getalldata()\n    }\n    getalldata() {\n        this.http.get('/user/getone/' + this.activeRoute.snapshot.params['id']).subscribe((res: any) => {\n            if (res.success) {\n                this.data = res.boards;\n                if (this.data.swimlane.length == 0) {\n                    this.checkswim = false;\n                }\n                if (this.data.swimlane == null) {\n                    this.checkcard = false;\n                }\n            }\n        })\n    }\n    constructor(private router: Router, private http: HttpClient, private activeRoute: ActivatedRoute) {\n        this.http.get('/user/getone/' + this.activeRoute.snapshot.params['id']).subscribe((res: any) => {\n            if (res.success) {\n                this.data = res.boards;\n                if (this.data.swimlane.length == 0) {\n                    this.checkswim = false;\n                }\n                if (this.data.swimlane == null) {\n                    this.checkcard = false;\n                }\n            }\n        })\n    }\n\n    id = this.activeRoute.snapshot.params['id'];\n\n    swimsub(form) {\n        this.http.post('/user/swimlane', {\n            id: this.id,\n            name: form.name\n        }).subscribe((res: any) => {\n            if (res.success) {\n                console.log(res.message)\n                this.getalldata()\n            }\n        })\n    }\n\n    cardsub(form, swimid) {\n        this.http.post('/user/card', {\n            id: this.id,\n            name: form.name,\n            swimid: swimid\n        }).subscribe((res: any) => {\n            if (res.success) {\n                console.log(res.message)\n                this.getalldata()\n            }\n        })\n    }\n\n    // delform(form, swimid) {\n    //     this.http.post('/user/card', {\n    //         id: this.id,\n    //         name: form.name,\n    //         swimid: swimid\n    //     }).subscribe((res: any) => {\n    //         if (res.success) {\n    //             console.log(res.message)\n    //             this.getalldata()\n    //         }\n    //     })\n    // }\n\n    onItemDrop(e: any, swimid, cardid) {\n\n        this.http.post('/user/card', {\n            id: this.id,\n            name: e.dragData.name,\n            swimid: swimid\n        }).subscribe((res: any) => {\n            if (res.success) {\n                console.log('Card dropped')\n                this.getalldata()\n            }\n        })\n    }\n    onItemDrag(swimid, cardid) {\n        this.http.post('/user/card/delete', {\n            id: this.id,\n            cardid: cardid,\n            swimid: swimid\n        }).subscribe((res: any) => {\n            if (res.success) {\n\n                this.getalldata()\n            }\n        })\n\n    }\n\n    editcard(form, cardid, swimid) {\n        this.http.post('/user/card/edit', {\n            id: this.id,\n            cardid: cardid,\n            swimid: swimid,\n            name: form.name\n        }).subscribe((res: any) => {\n            if (res.success) {\n                console.log(res.message)\n                this.getalldata()\n            }\n        })\n    }\n\n    delcard(cardid, swimid) {\n        this.http.post('/user/card/delete', {\n            id: this.id,\n            cardid: cardid,\n            swimid: swimid\n        }).subscribe((res: any) => {\n            if (res.success) {\n                console.log(res.message)\n                this.getalldata()\n            }\n        })\n    }\n\n\n\n\n\n}\n","module.exports = \"<style>\\n  .container {\\n    margin-top: 10rem;\\n\\n  }\\n\\n  @media(max-width:500px) {\\n\\n    .container {\\n      margin-top: 6rem;\\n    }\\n  }\\n</style>\\n\\n<head>\\n  <!-- <link rel=\\\"stylesheet\\\" href=\\\"./node_modules/ng-drag-drop/style.css\\\"> -->\\n</head>\\n\\n<br>\\n<br>\\n<br>\\n\\n<nav class=\\\"navbar navbar-dark bg-custom\\\">\\n  <span class=\\\"navbar-brand mb-0 h1\\\">{{data?.name}}</span>\\n</nav>\\n\\n\\n\\n<div *ngIf=\\\"data && checkswim;else noswim\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let el of data.swimlane\\\" class=\\\"col-lg-3 col-md-4 col-sm-6 col-xs-12\\\">\\n      <div class=\\\"card\\\" style=\\\"border: 2px solid black; width: 15rem; margin-left: 5px;\\\">\\n        <h4 class=\\\"card-header text-center text-white bg-primary\\\">{{el.name}}</h4>\\n        <div class=\\\"card-body\\\">\\n\\n          <div *ngIf=\\\"checkcard;else nocard\\\">\\n            <div *ngFor=\\\"let k of el.card\\\" droppable (onDrop)=\\\"onItemDrop($event,el._id)\\\">\\n              <ul class=\\\"list-group list-group-flush\\\">\\n                <li class=\\\"list-group-item\\\" [dragData]=\\\"k\\\" [dragData]=\\\"el._id\\\" draggable (onDragEnd)=\\\" onItemDrag(el._id,k._id)\\\">{{k.name}}</li>\\n              </ul>\\n\\n              <form #cardedit=\\\"ngForm\\\" (ngSubmit)=\\\"editcard(cardedit.value,k._id,el._id)\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <input type=\\\"text\\\" name=\\\"name\\\" ngModel required class=\\\"form-control\\\" required>\\n                  </div>\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"cardedit.invalid\\\">Edit</button>\\n\\n              </form>\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"delcard(k._id,el._id)\\\">Delete</button>\\n\\n              <hr>\\n              <br>\\n\\n\\n\\n            </div>\\n\\n            <form #cardform=\\\"ngForm\\\" (ngSubmit)=\\\"cardsub(cardform.value,el._id)\\\" droppable (onDrop)=\\\"onItemDrop($event,el._id)\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                  <input type=\\\"text\\\" name=\\\"name\\\" ngModel class=\\\"form-control\\\" required>\\n                </div>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"cardform.invalid\\\">Add Card</button>\\n              <!-- <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delform(k._id,el._id)\\\">Delete Card</button> -->\\n            </form>\\n\\n          </div>\\n          <ng-template #nocard>\\n            <p style=\\\"color:white\\\">You Have No Cards..!!</p>\\n            <form #cardform=\\\"ngForm\\\" (ngSubmit)=\\\"cardsub(cardform.value,el._id)\\\" droppable (onDrop)=\\\"onItemDrop($event,el._id)\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                  <input type=\\\"text\\\" name=\\\"name\\\" ngModel class=\\\"form-control\\\" required>\\n                </div>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"cardform.invalid\\\">Add Card</button>\\n            </form>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<ng-template #noswim>\\n  <p style=\\\"color:white\\\">You Have No Swimlanes..!!</p>\\n</ng-template>\\n\\n\\n<div style=\\\"width:50%; margin: auto\\\">\\n  <form #swimform=\\\"ngForm\\\" (ngSubmit)=\\\"swimsub(swimform.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group mb-3\\\">\\n        <input type=\\\"text\\\" name=\\\"name\\\" ngModel required class=\\\"form-control\\\" required>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"swimform.invalid\\\">Add Swimlane</button>\\n  </form>\\n</div>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.html',\n  styleUrls: []\n})\nexport class DashboardComponent {\n  token;\n  constructor(private router:Router,private http:HttpClient){\n  }\n  boardsub(form){\n      this.token=localStorage.getItem('token')\n\n      this.http.post('/user/postboard',{\n          name:form.name,\n          token:this.token\n      }).subscribe((res:any)=>{\n          if(res.success){\n              console.log('Board Created')\n              this.router.navigate(['/']);\n          }\n      })\n  }\n}\n","module.exports = \"<!-- <br><br><h1>This is dashboard</h1><br><br> -->\\n  <!-- <div class=\\\"jumbotron jumbotron-fluid\\\">\\n      <div class=\\\"container\\\">\\n        <h1 class=\\\"display-4\\\">You can now create new boards</h1>\\n        <br>\\n        <form #boardform=\\\"ngForm\\\" (ngSubmit)=\\\"boardsub(boardform.value)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <i class=\\\"far fa-envelope\\\"></i>\\n                </span>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"name\\\" ngModel required minlength=\\\"5\\\" class=\\\"form-control\\\"  required>\\n            </div> \\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"boardform.invalid\\\">Submit</button>\\n        </form>\\n      </div>\\n    </div>   -->\\n\\n  <br><br><br><br>\\n  \\n <div class=\\\"d-flex justify-content-center\\\">\\n  <div class=\\\"card\\\" style=\\\"width: 58rem;\\\">\\n    \\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">Work smarter with your very own Trello board.</h5>\\n      <p class=\\\"card-text\\\">Boards are where projects get organized, information is shared, and great work happens. They give everyone a shared perspective on the work getting done and what still needs to get done.</p>\\n      <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">Create new board</a>\\n    </div>\\n  </div>\\n </div>\\n\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">Add Board Title</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <form #boardform=\\\"ngForm\\\" (ngSubmit)=\\\"boardsub(boardform.value)\\\">\\n        <div class=\\\"modal-body\\\">\\n          \\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" minlength=\\\"5\\\" name=\\\"name\\\" ngModel required class=\\\"form-control\\\">\\n            </div>\\n            </div>\\n           \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"boardform.invalid\\\">Create board</button>\\n        </div>\\n      </form>\\n      </div>\\n    </div>\\n  </div>\\n \\n\\n<script async src=\\\"https://www.googletagmanager.com/gtag/js?id=UA-134613968-2\\\"></script>\\n<script>\\n  window.dataLayer = window.dataLayer || [];\\n  function gtag(){dataLayer.push(arguments);}\\n  gtag('js', new Date());\\n\\n  gtag('config', 'UA-134613968-2');\\n</script>\\n\\n  <app-allboard></app-allboard>\\n\"","\nimport { NgModule } from '@angular/core';\nimport { DashboardComponent } from './dashboard.component';\nimport { RouterModule } from '@angular/router';\nimport { AllBoardsComponent } from '../board/allboards.component';\nimport { BoardComponent } from '../board/board.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule,HttpClient } from '@angular/common/http';\nimport {NgDragDropModule} from 'ng-drag-drop';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    AllBoardsComponent,\n    BoardComponent\n  ],\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    CommonModule,\n    NgDragDropModule.forRoot(), \n    RouterModule.forChild([{\n      path:'',\n      component:DashboardComponent\n    },{\n      path:'board/allboards',\n      component:AllBoardsComponent\n    },{\n      path:'user/:id',\n      component:BoardComponent\n    }])\n  ],\n  providers:[]\n})\nexport class DashboardModule { }"],"sourceRoot":""}